name: functional-tests
on:
  # secrets are not passed to workflows that are triggered by a pull request from a fork.
  # see https://docs.github.com/en/actions/reference/encrypted-secrets
  workflow_dispatch:
  push:
    branches: [ 'main' ]

# Actions
# shivammathur/setup-php@v2 https://github.com/marketplace/actions/setup-php-action
# sudo-bot/action-scrutinizer@latest https://github.com/marketplace/actions/action-scrutinizer

jobs:
  functional-tests:
    name: Functional tests
    runs-on: "ubuntu-latest"

    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for sudo-bot/action-scrutinizer

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: soap
          coverage: xdebug
          tools: composer:v2
        env:
          fail-fast: true

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install project dependencies
        run: composer upgrade --no-interaction --no-progress --prefer-dist

      - name: Install SAT XML resources
        shell: bash
        run: |
          git clone --depth 1 https://github.com/phpcfdi/resources-sat-xml resources-sat-xml-cloned
          mv resources-sat-xml-cloned/resources vendor/eclipxe/cfdiutils/build/resources
          rm -r -f resources-sat-xml-cloned

      - name: Set up environment file
        run: gpg --quiet --batch --yes --decrypt --passphrase="$ENV_GPG_SECRET" --output tests/.env tests/.env-testing.enc
        env:
          ENV_GPG_SECRET: ${{ secrets.ENV_GPG_SECRET }}

      - name: Run integration tests with code coverage
        run: vendor/bin/phpunit --testdox --verbose --exclude-group large --coverage-clover=build/coverage-clover.xml

      - name: Upload code coverage to scrutinizer
        uses: sudo-bot/action-scrutinizer@latest
        with:
          cli-args: "--format=php-clover build/coverage-clover.xml"
        continue-on-error: true
